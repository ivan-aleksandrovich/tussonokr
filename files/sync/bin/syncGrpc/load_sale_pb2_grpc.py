# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import load_sale_pb2 as load__sale__pb2


class HandshakeRequestStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.handshake = channel.unary_unary(
        '/HandshakeRequest/handshake',
        request_serializer=load__sale__pb2.Handshake.SerializeToString,
        response_deserializer=load__sale__pb2.HandshakeResponse.FromString,
        )


class HandshakeRequestServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def handshake(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HandshakeRequestServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'handshake': grpc.unary_unary_rpc_method_handler(
          servicer.handshake,
          request_deserializer=load__sale__pb2.Handshake.FromString,
          response_serializer=load__sale__pb2.HandshakeResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'HandshakeRequest', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SalesStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.load = channel.stream_unary(
        '/Sales/load',
        request_serializer=load__sale__pb2.SalesPackage.SerializeToString,
        response_deserializer=load__sale__pb2.SendSalesResponse.FromString,
        )


class SalesServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def load(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SalesServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'load': grpc.stream_unary_rpc_method_handler(
          servicer.load,
          request_deserializer=load__sale__pb2.SalesPackage.FromString,
          response_serializer=load__sale__pb2.SendSalesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Sales', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
